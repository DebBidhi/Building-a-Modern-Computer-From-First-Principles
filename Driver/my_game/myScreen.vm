function Screen.init 2
push constant 0
not
pop static 0
push constant 16
call Array.new 1
pop static 1
push constant 1
pop local 0
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 1
push static 1
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 0
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 1
push constant 16384
pop local 0
label WHILE_EXP0
push local 0
push constant 24575
lt
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 5
push argument 0
push constant 16
call Math.divide 2
pop local 4
push constant 16384
push argument 1
push constant 32
call Math.multiply 2
add
push local 4
add
pop local 0
push argument 0
push local 4
push constant 16
call Math.multiply 2
sub
pop local 2
push local 2
push static 1
add
pop pointer 1
push that 0
pop local 1
push local 0
call Memory.peek 1
pop local 3
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 1
or
pop local 3
goto IF_END0
label IF_FALSE0
push local 3
push local 1
not
and
pop local 3
label IF_END0
push local 0
push local 3
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 6
push argument 2
push argument 0
sub
pop local 2
push argument 3
push argument 1
sub
pop local 3
push local 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push argument 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontal 3
pop temp 0
goto IF_END1
label IF_FALSE1
push argument 2
push argument 0
push argument 1
call Screen.drawHorizontal 3
pop temp 0
label IF_END1
