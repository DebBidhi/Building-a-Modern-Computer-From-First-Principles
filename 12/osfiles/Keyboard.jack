// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static boolean pressed;

    /** Initializes the keyboard. */
    function void init() {
	let pressed=false;
	return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, and the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
	var char ch;
	let ch=Memory.peek(24576);
	if(ch>0){
		let pressed=true;
	}
	else{
		let pressed=false;
	}
	return ch;
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
	var char ch;
	while(~pressed){
		let ch=Keyboard.keyPressed();
	}
	while(pressed){
		do Keyboard.keyPressed();
	}
	if ((ch > 32) & (ch < 126)) {
		do Output.printChar(ch);
	}
	return ch;
    }

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its value.
     */
    function String readLine(String message) {
	var char ch;
	var String s;
	let s=String.new(256);
	do Output.printString(message);
	while(~(ch=128)){
		let ch=Keyboard.readChar();
		if(ch=128){
			do Output.println();
		}
		else{
			if(ch=129){
				do Output.backSpace();
				do s.eraseLastChar();
			}
			else{
				do s.appendChar(ch);
			}
		}
	}
	return s;
    }   

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
	var String i;
	let i=Keyboard.readLine(message);
	return i.intValue();
    }
}